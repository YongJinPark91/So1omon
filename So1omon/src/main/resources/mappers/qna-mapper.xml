<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="qnaMapper">

  	<resultMap type="Question" id="questionResult">
  		<result column="Q_NO" property="qno" />
  		<result column="Q_WRITER" property="qwriter" />
  		<result column="REF_NO" property="refNO" />
  		<result column="Q_TITLE" property="qtitle" />
  		<result column="Q_CONTENT" property="qcontent" />
  		<result column="Q_CATEGORY" property="qcategory" />
  		<result column="Q_DATE" property="qdate" />
  		<result column="Q_STATUS" property="qstatus" />
  	</resultMap>
  	
  	<resultMap type="Answer" id="answerResult">
  		<result column="A_NO" property="ano" />
  		<result column="Q_NO" property="qno" />
  		<result column="A_CONTENT" property="acontent" />
  		<result column="A_DATE" property="adate" />
  		<result column="A_STATUS" property="astatus" />
  	</resultMap>
  	
  	<select id="selectQnaListCount" resultType="_int">
		select
		       count(*)
		  from question
  	</select>
  	
  	<select id="selectQnaList" resultMap="questionResult">
	  	select
	       q_no
	     , q_title
	     , user_id as q_writer
	     , q_status
	     , to_char(q_date, 'YYYY-MM-DD') as "q_date"
	  from question
	  join member on(q_writer = user_no)
	 order
	    by q_no desc
  	</select>
  	
  	<select id="selectSearchCount" resultType="_int">
		select
		       count(*)
		  from question q
		  join member on (q_writer = user_no)
		 
		 <if test="condition == 'title'">
		   and q_title  
		 </if>
		 <if test="condition == 'content'">
		   and q_content
		 </if>
		   like '%' || #{keyword} || '%'
  	</select>
  	
  	
  	<select id="selectSearchList" resultMap="questionResult">
  		select
		       q_no
		     , q_title
		     , user_id as q_writer 
		     , q_date
             , q_status
		  from question q
		  join member on (q_writer = user_no)
		 
		 <if test="condition == 'title'">
		   and q_title  
		 </if>
		 <if test="condition == 'content'">
		   and q_content
		 </if>
		   like '%' || #{keyword} || '%'
  	</select>
  	
  	
  	
  	
  	

</mapper>